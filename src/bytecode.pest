program           =  { SOI ~ directive+ ~ EOI }
WHITESPACE        = _{ " " | "\t" | "\r" | "\n" }
COMMENT           = _{ ";" ~ ('a'..'z' | 'A'..'Z' | '0'..'9')* ~ "\n" }
general_register  =  { "reg" ~ ASCII_DIGIT }
argument_register =  { "arg" ~ ASCII_DIGIT }

directive             = { include_directive* ~ data_directive? ~ text_directive ~ global_directive }
label                 = { "_"? ~ ASCII_ALPHA ~ ASCII_ALPHANUMERIC* ~ ":" }
include_directive     = { ".include" ~ "\"" ~ ASCII_ALPHANUMERIC* ~ "." ~ "asm" ~ "\"" }
data_directive        = { ".data" ~ (variable)* }
variable              = { label ~ type_directive }
type_directive        = { i32_directive | f32_directive | string_directive | char_directive | i32_array_directive | f32_array_directive }
i32_directive         = { ".i32" ~ int }
i16_directive         = { ".i16" ~ int }
i8_directive          = { ".i8" ~ int }
u32_directive         = { ".u32" ~ uint }
u16_directive         = { ".u16" ~ uint }
u8_directive          = { ".u8" ~ uint }
f32_directive         = { ".f32" ~ float }
string_directive      = { ".string" ~ "\"" ~ ASCII_ALPHANUMERIC* ~ "\"" }
char_directive        = { ".char" ~ "'" ~ ASCII_ALPHA ~ "'" }
i32_array_directive   = { ".i32_array" ~ ASCII_DIGIT ~ "{" ~ (ASCII_DIGIT ~ ",") ~ "}" }
f32_array_directive   = { ".f32_array" ~ ASCII_DIGIT ~ "{" ~ ((ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT*) ~ ",") ~ "}" }
text_directive        = { ".text" }
global_directive      = { ".global" ~ ASCII_ALPHANUMERIC+ }
instruction_directive = { ".instruction" ~ (argument_register)* ~ general_register }

int   = @{ "-"? ~ ASCII_DIGIT+ }
uint  = @{ ASCII_DIGIT+ }
float = @{ "-"? ~ ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT+ }

type      = { i8_type | i16_type | i32_type | u8_type | u16_type | u32_type | f32_type | char_type }
i8_type   = { "i8" }
i16_type  = { "i16" }
i32_type  = { "i32" }
u8_type   = { "u8" }
u16_type  = { "u16" }
u32_type  = { "u32" }
f32_type  = { "f32" }
char_type = { "char" }
